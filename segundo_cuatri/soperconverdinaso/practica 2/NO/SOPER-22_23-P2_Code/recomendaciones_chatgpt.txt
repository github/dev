Aquí hay algunas recomendaciones para implementar cada parte de la práctica:

a) Arranque del sistema y proceso Principal:

Utiliza la función fork() para crear los procesos votantes y almacenar sus PIDs en un archivo compartido.
Usa la función signal() para manejar las señales SIGINT y SIGUSR1.
Usa la función alarm() para establecer el tiempo máximo de ejecución del sistema.
b) Procesos Votante:

Usa la función signal() para manejar la señal SIGUSR1 y SIGUSR2.
Usa la función rand() para generar votos aleatorios.
Usa semáforos para evitar problemas de concurrencia.
c) Protección de zonas críticas:

Usa la función sigprocmask() para bloquear las señales y evitar su pérdida.
Usa sigsuspend() para realizar esperas no activas y esperar señales.
d) Temporización:

Usa la función alarm() para establecer un temporizador para el sistema.
e) Análisis de la ejecución:

Sí, es posible que se produzcan problemas de concurrencia debido a la competencia entre los procesos votantes por convertirse en el candidato. Es importante garantizar la sincronización y la protección de las zonas críticas para evitar problemas de concurrencia y pérdida de señales.
f) Sincronización con semáforos:

Utiliza semáforos para garantizar que solo haya un proceso candidato y que no se pierda información en los accesos al archivo compartido.
